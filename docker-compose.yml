version: '3.8'

services:
  # Sensor Layer
  network-monitor:
    image: alpine:latest
    container_name: netguardian-network-monitor
    command: sh -c "echo 'Network monitor placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
    
  endpoint-agent:
    image: alpine:latest
    container_name: netguardian-endpoint-agent
    command: sh -c "echo 'Endpoint agent placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  log-collector:
    image: alpine:latest
    container_name: netguardian-log-collector
    command: sh -c "echo 'Log collector placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  threat-feed:
    image: alpine:latest
    container_name: netguardian-threat-feed
    command: sh -c "echo 'Threat feed placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  # Processing Layer
  detection-engine:
    image: alpine:latest
    container_name: netguardian-detection-engine
    command: sh -c "echo 'Detection engine placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  analytics-pipeline:
    image: alpine:latest
    container_name: netguardian-analytics-pipeline
    command: sh -c "echo 'Analytics pipeline placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  correlation-service:
    image: alpine:latest
    container_name: netguardian-correlation-service
    command: sh -c "echo 'Correlation service placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  ml-component:
    image: alpine:latest
    container_name: netguardian-ml-component
    command: sh -c "echo 'ML component placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  # Response Layer
  automation-controller:
    image: alpine:latest
    container_name: netguardian-automation-controller
    command: sh -c "echo 'Automation controller placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  firewall-manager:
    image: alpine:latest
    container_name: netguardian-firewall-manager
    command: sh -c "echo 'Firewall manager placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network
  
  # Data Layer
  event-store:
    image: netguardian/event-store:latest
    container_name: netguardian-event-store
    restart: unless-stopped
    networks:
      - netguardian-network
    volumes:
      - event-data:/var/lib/clickhouse
  
  intelligence-db:
    image: netguardian/intelligence-db:latest
    container_name: netguardian-intelligence-db
    restart: unless-stopped
    networks:
      - netguardian-network
    volumes:
      - intel-data:/var/lib/postgresql/data

  evidence-vault:
    image: netguardian/evidence-vault:latest
    container_name: netguardian-evidence-vault
    restart: unless-stopped
    networks:
      - netguardian-network
    volumes:
      - evidence-data:/data

  data-layer-api:
    image: netguardian/data-layer-api:latest
    container_name: netguardian-data-layer-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - netguardian-network
    depends_on:
      - event-store
      - intelligence-db
      - evidence-vault
  
  # Presentation Layer
  dashboard:
    image: nginx:alpine
    container_name: netguardian-dashboard
    restart: unless-stopped
    ports:
      - "8080:80"
    networks:
      - netguardian-network
    volumes:
      - ./presentation_layer/dashboard:/usr/share/nginx/html
  
  api-gateway:
    image: nginx:alpine
    container_name: netguardian-api-gateway
    restart: unless-stopped
    ports:
      - "8000:80"
    networks:
      - netguardian-network
  
  # AI Layer
  security-orchestrator:
    image: alpine:latest
    container_name: netguardian-security-orchestrator
    command: sh -c "echo 'Security orchestrator placeholder running' && tail -f /dev/null"
    restart: unless-stopped
    networks:
      - netguardian-network

networks:
  netguardian-network:
    driver: bridge

volumes:
  event-data:
  intel-data:
  evidence-data:
  api-logs: 